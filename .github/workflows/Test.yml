name: UnitTest


  
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9"]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # Install the same dependencies as the project 
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest 
          pip install -r requirements.txt
      
      # Run the test scripts
      #- name: Test with pytest
        #run: |
          #echo "USER: $USER"
          #pip install pytest pytest-cov
          #python -m pytest
      - name: Configure Testing Environment
        run: |
          echo "TESTING=1" >> $GITHUB_ENV
        env:
          TESTING: 1
      - name: Test with unittest
        #runs the unittest
        run: |
          #TODO: Add the command to run all the unittest here.
          python -m unittest discover -s flask-server/srv -p "*_test.py"

